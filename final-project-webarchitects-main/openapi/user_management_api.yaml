openapi: 3.0.0
info:
  title: PawConnect API - User Management
  version: 1.0.0
  description: API for managing user profiles in PawConnect.

paths:
  /users:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            example:
              name: "John Doe"
              email: "johndoe@example.com"
              password: "password123"
              location:
                latitude: 37.7749
                longitude: -122.4194
                address: "San Francisco, CA"
      responses:
        '201':
          description: User successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid request payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/{userId}:
    get:
      summary: Retrieve user profile
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
            example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        '200':
          description: User profile details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    User:
      type: object
      properties:
        userId:
          type: string
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
          example: "John Doe"
        email:
          type: string
          example: "johndoe@example.com"
        password:
          type: string
          example: "password123"
        location:
          $ref: '#/components/schemas/Location'
    
    Location:
      type: object
      properties:
        latitude:
          type: number
          format: float
          example: 37.7749
        longitude:
          type: number
          format: float
          example: -122.4194
        address:
          type: string
          example: "San Francisco, CA"

    Error:
      type: object
      properties:
        code:
          type: integer
          example: 400
        message:
          type: string
          example: "Invalid request payload"